"""Add phash and dhash to artwork

Revision ID: 1e1e02ca4506
Revises: fa840862c001
Create Date: 2025-06-15 10:07:28.303066

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1e1e02ca4506'
down_revision: Union[str, None] = 'fa840862c001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('receipts')
    op.add_column('artworks', sa.Column('hash_phash', sa.String(), nullable=True))
    op.add_column('artworks', sa.Column('hash_dash', sa.String(), nullable=True))
    op.alter_column('artworks', 'owner_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('artworks', 'owner_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('artworks', 'hash_dash')
    op.drop_column('artworks', 'hash_phash')
    op.create_table('receipts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('buyer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('artwork_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('purchase_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artwork_id'], ['artworks.id'], name='receipts_artwork_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], name='receipts_buyer_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='receipts_pkey')
    )
    # ### end Alembic commands ###
